name: "Continuous Deployment"
on:
  # Make workflow reusable
  workflow_call:
    inputs:
      debug:
        type: boolean
        required: false
        default: false
      service:
        type: string
        required: false
        default: 'gcloud'
      timeout:
        description: 'Timeout for the deployment job in minutes'
        required: false
        default: 10000
        type: number
    secrets:
      PROD_GOOGLE_AUTH:
        required: true
      BETA_GOOGLE_AUTH:
        required: true

jobs:
  deployment:
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout }}
    if: ${{ (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
      github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
    env:
      PROD_DEPLOY: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_env == 'production') || github.event_name == 'push' }}
      STAGING_DEPLOY: ${{ github.event_name == 'workflow_run' || (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_env != 'production') }}
      STAGING_DEPLOY_ENV: ${{github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_env || 'beta'}}
      DEPLOY_BRANCH: ${{github.event_name == 'workflow_run' && github.event.workflow_run.head_branch || github.ref}}
    steps:
      # common steps
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.DEPLOY_BRANCH }}
      - name: Cancel previous Workflow Actions
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        if: inputs.service == 'gcloud'

      # uses: satackey/action-docker-layer-caching@v0.0.11 (outdated for deprecations)
      - uses: jpribyl/action-docker-layer-caching@v0.1.1
        continue-on-error: true
        with:
          key: CD-docker-cache-${{ hashFiles('Dockerfile') }}
          restore-keys: app-cache-

      - name: Calc current version
        run: |
          git_hash=$(git rev-parse --verify HEAD || :)
          default_version=${git_hash:-$(date +%s)}
          deploy_version=$(git tag --contains $GIT_HASH | head -n 1)
          deploy_version=${deploy_version:-$default_version}
          echo "DEPLOY_VERSION=$deploy_version" >> $GITHUB_ENV

      - run: "sudo gem install kubernetes_helper"
      - name: Staging deployment
        env: # Env variable saved in github that contains gcloud credential (json format)
          KB_AUTH_TOKEN: ${{ secrets.BETA_GOOGLE_AUTH }}
          DEPLOY_ENV: ${{ env.STAGING_DEPLOY_ENV }}
          DEPLOY_VERSION: ${{ env.DEPLOY_VERSION }}
        run: kubernetes_helper run_deployment 'cd.sh'
        if: ${{ env.STAGING_DEPLOY == 'true' }}

      - name: Production deployment
        env:
          KB_AUTH_TOKEN: ${{ secrets.PROD_GOOGLE_AUTH }}
          DEPLOY_ENV: production
          DEPLOY_VERSION: ${{ env.DEPLOY_VERSION }}
        run: kubernetes_helper run_deployment 'cd.sh'
        if: ${{ env.PROD_DEPLOY == 'true' }}

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: inputs.debug && always()
